// Code generated by MockGen. DO NOT EDIT.
// Source: mandacode.com/accounts/auth/internal/domain/service/oauth (interfaces: OAuthService)
//
// Generated by this command:
//
//	mockgen mandacode.com/accounts/auth/internal/domain/service/oauth OAuthService
//

// Package mock_oauthdomain is a generated GoMock package.
package mock_oauthdomain

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	dto "mandacode.com/accounts/auth/internal/domain/dto"
)

// MockOAuthService is a mock of OAuthService interface.
type MockOAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockOAuthServiceMockRecorder
	isgomock struct{}
}

// MockOAuthServiceMockRecorder is the mock recorder for MockOAuthService.
type MockOAuthServiceMockRecorder struct {
	mock *MockOAuthService
}

// NewMockOAuthService creates a new mock instance.
func NewMockOAuthService(ctrl *gomock.Controller) *MockOAuthService {
	mock := &MockOAuthService{ctrl: ctrl}
	mock.recorder = &MockOAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOAuthService) EXPECT() *MockOAuthServiceMockRecorder {
	return m.recorder
}

// GetUserInfo mocks base method.
func (m *MockOAuthService) GetUserInfo(accessToken string) (*dto.OAuthUserInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserInfo", accessToken)
	ret0, _ := ret[0].(*dto.OAuthUserInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserInfo indicates an expected call of GetUserInfo.
func (mr *MockOAuthServiceMockRecorder) GetUserInfo(accessToken any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserInfo", reflect.TypeOf((*MockOAuthService)(nil).GetUserInfo), accessToken)
}
