syntax = "proto3";

package user.local.v1;

import "third_party/validate/validate.proto";

option go_package = "mandacode.com/accounts/auth/proto/user/local/v1;localuserv1";

service LocalUserService {
  // Enrolls a local user with email and password
  rpc EnrollUser(EnrollUserRequest) returns (EnrollUserResponse);
  // Deletes a local user by user ID
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  // Updates a local user's email and password
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
}

//
// Enroll local user messages
//
message EnrollUserRequest {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
  string email = 2 [ (validate.rules).string = {email : true} ];
  string password = 3 [
    (validate.rules).string = {min_len : 8 max_len : 64}
  ]; // Password must be between 8 and 64 characters
  optional bool is_active = 4;
  optional bool is_verified = 5;
}

message EnrollUserResponse {
  bool success = 1; // Indicates if the enrollment was successful
}

//
// Delete local user messages
//
message DeleteUserRequest {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
}
message DeleteUserResponse {
  bool success = 1; // Indicates if the deletion was successful
}

//
// Update local user messages
//
message UpdateUserRequest {
  string user_id = 1 [ (validate.rules).string = {uuid : true} ];
  optional string email = 2 [ (validate.rules).string = {email : true} ];
  optional string password = 3 [
    (validate.rules).string = {min_len : 8 max_len : 64}
  ]; // Password must be between 8 and 64 characters
  optional bool is_active = 4;
  optional bool is_verified = 5;
}

message UpdateUserResponse {
  bool success = 1; // Indicates if the update was successful
}
