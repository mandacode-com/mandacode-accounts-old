// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ClientAccessesColumns holds the columns for the "client_accesses" table.
	ClientAccessesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "client_id", Type: field.TypeString, Unique: true},
		{Name: "client_secret", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "service_id", Type: field.TypeUUID},
	}
	// ClientAccessesTable holds the schema information for the "client_accesses" table.
	ClientAccessesTable = &schema.Table{
		Name:       "client_accesses",
		Columns:    ClientAccessesColumns,
		PrimaryKey: []*schema.Column{ClientAccessesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "client_accesses_services_client_accesses",
				Columns:    []*schema.Column{ClientAccessesColumns[8]},
				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "service_id", Type: field.TypeUUID},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "groups_services_groups",
				Columns:    []*schema.Column{GroupsColumns[6]},
				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "group_service_id_name",
				Unique:  true,
				Columns: []*schema.Column{GroupsColumns[6], GroupsColumns[1]},
			},
		},
	}
	// GroupUsersColumns holds the columns for the "group_users" table.
	GroupUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "group_id", Type: field.TypeUUID},
	}
	// GroupUsersTable holds the schema information for the "group_users" table.
	GroupUsersTable = &schema.Table{
		Name:       "group_users",
		Columns:    GroupUsersColumns,
		PrimaryKey: []*schema.Column{GroupUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_users_groups_group_users",
				Columns:    []*schema.Column{GroupUsersColumns[4]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "groupuser_group_id_user_id",
				Unique:  true,
				Columns: []*schema.Column{GroupUsersColumns[4], GroupUsersColumns[1]},
			},
		},
	}
	// ServicesColumns holds the columns for the "services" table.
	ServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ServicesTable holds the schema information for the "services" table.
	ServicesTable = &schema.Table{
		Name:       "services",
		Columns:    ServicesColumns,
		PrimaryKey: []*schema.Column{ServicesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ClientAccessesTable,
		GroupsTable,
		GroupUsersTable,
		ServicesTable,
	}
)

func init() {
	ClientAccessesTable.ForeignKeys[0].RefTable = ServicesTable
	GroupsTable.ForeignKeys[0].RefTable = ServicesTable
	GroupUsersTable.ForeignKeys[0].RefTable = GroupsTable
}
