// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"mandacode.com/accounts/role/ent/clientaccess"
	"mandacode.com/accounts/role/ent/group"
	"mandacode.com/accounts/role/ent/groupuser"
	"mandacode.com/accounts/role/ent/schema"
	"mandacode.com/accounts/role/ent/service"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	clientaccessFields := schema.ClientAccess{}.Fields()
	_ = clientaccessFields
	// clientaccessDescName is the schema descriptor for name field.
	clientaccessDescName := clientaccessFields[2].Descriptor()
	// clientaccess.NameValidator is a validator for the "name" field. It is called by the builders before save.
	clientaccess.NameValidator = clientaccessDescName.Validators[0].(func(string) error)
	// clientaccessDescClientID is the schema descriptor for client_id field.
	clientaccessDescClientID := clientaccessFields[3].Descriptor()
	// clientaccess.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	clientaccess.ClientIDValidator = clientaccessDescClientID.Validators[0].(func(string) error)
	// clientaccessDescClientSecret is the schema descriptor for client_secret field.
	clientaccessDescClientSecret := clientaccessFields[4].Descriptor()
	// clientaccess.ClientSecretValidator is a validator for the "client_secret" field. It is called by the builders before save.
	clientaccess.ClientSecretValidator = clientaccessDescClientSecret.Validators[0].(func(string) error)
	// clientaccessDescIsActive is the schema descriptor for is_active field.
	clientaccessDescIsActive := clientaccessFields[6].Descriptor()
	// clientaccess.DefaultIsActive holds the default value on creation for the is_active field.
	clientaccess.DefaultIsActive = clientaccessDescIsActive.Default.(bool)
	// clientaccessDescCreatedAt is the schema descriptor for created_at field.
	clientaccessDescCreatedAt := clientaccessFields[7].Descriptor()
	// clientaccess.DefaultCreatedAt holds the default value on creation for the created_at field.
	clientaccess.DefaultCreatedAt = clientaccessDescCreatedAt.Default.(func() time.Time)
	// clientaccessDescUpdatedAt is the schema descriptor for updated_at field.
	clientaccessDescUpdatedAt := clientaccessFields[8].Descriptor()
	// clientaccess.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	clientaccess.DefaultUpdatedAt = clientaccessDescUpdatedAt.Default.(func() time.Time)
	// clientaccess.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	clientaccess.UpdateDefaultUpdatedAt = clientaccessDescUpdatedAt.UpdateDefault.(func() time.Time)
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[2].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	// groupDescIsActive is the schema descriptor for is_active field.
	groupDescIsActive := groupFields[4].Descriptor()
	// group.DefaultIsActive holds the default value on creation for the is_active field.
	group.DefaultIsActive = groupDescIsActive.Default.(bool)
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupFields[5].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescUpdatedAt is the schema descriptor for updated_at field.
	groupDescUpdatedAt := groupFields[6].Descriptor()
	// group.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	group.DefaultUpdatedAt = groupDescUpdatedAt.Default.(func() time.Time)
	// group.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	group.UpdateDefaultUpdatedAt = groupDescUpdatedAt.UpdateDefault.(func() time.Time)
	groupuserFields := schema.GroupUser{}.Fields()
	_ = groupuserFields
	// groupuserDescCreatedAt is the schema descriptor for created_at field.
	groupuserDescCreatedAt := groupuserFields[2].Descriptor()
	// groupuser.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupuser.DefaultCreatedAt = groupuserDescCreatedAt.Default.(func() time.Time)
	// groupuserDescUpdatedAt is the schema descriptor for updated_at field.
	groupuserDescUpdatedAt := groupuserFields[3].Descriptor()
	// groupuser.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupuser.DefaultUpdatedAt = groupuserDescUpdatedAt.Default.(func() time.Time)
	// groupuser.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupuser.UpdateDefaultUpdatedAt = groupuserDescUpdatedAt.UpdateDefault.(func() time.Time)
	serviceFields := schema.Service{}.Fields()
	_ = serviceFields
	// serviceDescName is the schema descriptor for name field.
	serviceDescName := serviceFields[1].Descriptor()
	// service.NameValidator is a validator for the "name" field. It is called by the builders before save.
	service.NameValidator = serviceDescName.Validators[0].(func(string) error)
	// serviceDescCreatedAt is the schema descriptor for created_at field.
	serviceDescCreatedAt := serviceFields[3].Descriptor()
	// service.DefaultCreatedAt holds the default value on creation for the created_at field.
	service.DefaultCreatedAt = serviceDescCreatedAt.Default.(func() time.Time)
	// serviceDescUpdatedAt is the schema descriptor for updated_at field.
	serviceDescUpdatedAt := serviceFields[4].Descriptor()
	// service.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	service.DefaultUpdatedAt = serviceDescUpdatedAt.Default.(func() time.Time)
	// service.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	service.UpdateDefaultUpdatedAt = serviceDescUpdatedAt.UpdateDefault.(func() time.Time)
}
